---
title: "Grade analysis lab"
author: "Miriam Sch√§fer"
format: 
  html:
    echo: false 
    warning: false
---

Find my github repository for this lab [here](https://github.com/miriam-schaefer/r-101-grade-analysis).


### Question 1
*Load the data set using a local file name (using here). Notice that the file is included in the forked repository.*

```{r}
here::i_am("r-101-grade-analysis.Rproj")
library(ggplot2)
library(dplyr)
library(tidyr) 
library(stringr)

grades <- read.csv("grades.csv")
```


### Question 2
*Compute the minimum, maximum, median and mean grade at the Exam and include the results as a table in the rendered document (using, e.g. knitr::kable).*


```{r}
q2 <- grades |> 
  filter(!is.na(Exam)) |>
  summarize(
    Min = min(Exam), 
    Max = max(Exam), 
    Median = median(Exam),
    Mean = mean(Exam)
  ) 

knitr::kable((q2), "simple")  
```



### Question 3 
*Counts the number of students who did not take the final exam (i.e. for whom Exam is NA) and include the results in a sentence in your rendered document.* 

```{r}
q3 <- grades |> count(is.na(Exam)==TRUE)
```
There were `r q3[2,2]` students who did not take the final exam. 


### Question 4
*Represent graphically in an adapted way the distribution of grades at the Exam. Make sure to adapt the code to avoid any error or warning from ggplot2.*

```{r}
q4 <- grades |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Exam)) + 
  geom_bar(fill = "black", color = "white") +
  labs(y = "Number of students", x = "Exam grade", title ="Distribution of grades")

q4
```

### Question 5 
*Compute the number of students in each Group and include the results in your document as a table*

```{r}
q5 <- grades |> 
  group_by(Group) |>
  summarize(N = n()) 

knitr::kable((q5), "simple")  
```


### Question 6
*Represent the same information as in the previous question in a graphical way.*
```{r}
q6 <- grades |> 
  ggplot(aes(x=Group)) + 
  geom_bar(fill = "steelblue", color = "white") + 
  theme(axis.text.x = element_text(angle = 45)) + 
  labs(y = "Number of students", title ="Number of students per group")

q6
```


### Question 7 
*Represent graphically the distribution of the grades at the Exam conditioned by the group. Test at least two different representations.*

```{r}
q7_1 <- grades |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Group, y=Exam)) + 
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45)) + 
  labs(y= "Grade in the exam", title ="1. Distribution of grades among groups (boxplot)")

q7_1
```


```{r}
q7_2 <- grades |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x=Group, y=Exam)) + 
  geom_violin() +
  theme(axis.text.x = element_text(angle = 45)) + 
  labs(y= "Grade in the exam", title ="2. Distribution of grades among groups (violin)")

q7_2
```



### Question 8 
*Compute the number of students who missed the Exam in each Group (i.e. students whose Exam is NA).*

```{r}
q8 <- grades |> 
  group_by(Group) |>
  summarize(N = n(), 
            Missed = sum(is.na(Exam))) 

knitr::kable((q8), "simple") 
```


### Question 9 
*Represent graphically the results obtained in the previous question.* 

```{r}
q9 <- q8 |> 
  ggplot(aes(x=Group, y=Missed)) + 
  geom_col(fill = "steelblue", color = "white") +
  theme(axis.text.x = element_text(angle = 45)) + 
  labs(y= "No. of students", title ="Number of students who missed the exam per group")

q9
```


### Question 10
*Create a new data frame built from the grades data set reshaped to a long format. The new data frame should keep the Id and the Group as the original variables.*
```{r}
q10 <- gather(grades, Name, Marks, Exam:Online_MCQ_19) 
```


### Question 11 
*Using the long format, compute the number of missing grades in total for each student.*
```{r}
q11 <- q10 |> 
  group_by(Id) |> 
  summarize(`Missed evaluations` = sum(is.na(Marks))) 
```


### Question 12 
*Represent graphically the distribution of the number of missing grades per student.*
```{r}
q12 <- q11 |> 
  ggplot(aes(x=Id, y=`Missed evaluations`)) + 
  geom_col() + 
  theme_minimal() + 
  labs(title="Number of missed evaluations per student")

q12
```

### Question 13 
*Using the long format, compute the same information as in question 8.*
```{r}
q13 <- q10 |> 
  group_by(Group) |> 
  summarize(N = n(), 
            Missed = sum(is.na(Marks))) 

knitr::kable((q13), "simple") 
```

### Question 14
*Using the long format, compute the number of missing grades for the online tests for each student.*
```{r}
q14 <- q10 |> 
  filter(str_starts(Name, "Online_MCQ")) |> 
  group_by(Id) |> 
  summarize(`Missed online evaluations` = sum(is.na(Marks))) 
```


### Question 15 
*Represent graphically the distribution of the grades at the Exam conditioned by the number of missing grades for the online tests.*
```{r}
q15 <- grades |> 
  rowwise() |> 
  mutate(`Missed online evaluations` = sum(c_across(starts_with("Online_MCQ")) |> is.na())) |>
  
  ggplot(aes(x=Exam)) + 
  geom_histogram(bins=40, fill = "darkblue", color = "white") + 
  facet_wrap(~`Missed online evaluations`) + 
  labs(title="Distribution of grades in final exam given the number of missed online tests", 
       x="Grade in final Exam", 
       y="No. of students given the number of online tests they missed")

q15
```


### Question 16 
*Create a table with two columns: Id to identify students and Missed with value TRUE when the student miss at least one MCQ_xx grade and FALSE when they miss no grade.* 
```{r}
q16 <- grades |> 
  rowwise(Id) |> 
  summarize(Missed = sum(is.na(c_across(starts_with("MCQ_")))) != 0)
```


### Question 17 
*Create a table with two columns: Group to identify groups and P_missed with the percentage of students in each group who missed at least one MCQ_xx grade.*
```{r}
q17 <- grades |> 
  group_by(Group) |>
  summarize(P_missed = mean(is.na(rowSums(across(starts_with("MCQ_")))) != 0) *100) 
```


### Question 18
*Represent graphically the average grade at the Exam per group as a function of the percentage of missed MCQ_xx grade as defined in the previous question.* 
```{r}
q18_1 <- grades |> 
  filter(!is.na(Exam)) |>
  group_by(Group) |>
  summarize(Average_grade = mean(Exam)) 

q18_2 <- inner_join(q18_1, q17, by = join_by(Group)) 

q18 <- q18_2 |> 
  ggplot(aes(y=Average_grade, x=P_missed)) + 
  geom_point(size=3) + 
  theme_bw() +
  labs(title="Average grade per group as a function of % of missed evaluations", 
       x= "Percentage of missed evaluations per group", 
       y= "Average grade")

q18
```



